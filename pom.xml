<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sample</groupId>
    <artifactId>sample-openglfx</artifactId>
    <name>sample-openglfx</name>
    <version>1.0.0</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>

        <gluonfx.plugin.version>1.0.23</gluonfx.plugin.version>
        <gluonfx.target>host</gluonfx.target>
        <javafx.plugin.version>0.0.8</javafx.plugin.version>
        <app.launcher>sample.Launcher</app.launcher>
        <lwjgl.natives>natives-windows</lwjgl.natives>
        <lwjgl.version>3.3.4</lwjgl.version>
        <openglfx.version>4.1.15</openglfx.version>
        <joml.version>1.9.25</joml.version>
        <tinylog.version>2.7.0</tinylog.version>
        <javafx.version>23.0.1</javafx.version>
        <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
        <imageName>Sample</imageName>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.lwjgl</groupId>
                <artifactId>lwjgl-bom</artifactId>
                <version>${lwjgl.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
        <dependency>
            <groupId>com.huskerdev</groupId>
            <artifactId>openglfx-lwjgl</artifactId>
            <version>${openglfx.version}</version>

            <exclusions>
                <exclusion>
                    <groupId>com.huskerdev</groupId>
                    <artifactId>openglfx-natives-core-linux</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.huskerdev</groupId>
                    <artifactId>openglfx-natives-core-macos</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.tinylog</groupId>
            <artifactId>tinylog-api</artifactId>
            <version>${tinylog.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tinylog</groupId>
            <artifactId>tinylog-impl</artifactId>
            <version>${tinylog.version}</version>
        </dependency>

        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-stb</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>--add-exports=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.base/com.sun.javafx=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.prism=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.prism.d3d=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/javafx.scene.image=ALL-UNNAMED</arg>
                        <arg>--add-exports=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=openglfx</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.prism=openglfx</arg>
                        <arg>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=openglfx</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>java-agent</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.library.path=${project.basedir}/../../libs/Plantrek.jar</argument>
                                <argument>${app.launcher}</argument>
                                <argument>-Dprism.maxvram=2G</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>native</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.build.directory}/${imageName}</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.plugin.version}</version>
                <configuration>
                    <mainClass>${app.launcher}</mainClass>
                    <options>
                        <option>--add-exports=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED</option>
                        <option>-Dorg.lwjgl.util.Debug=true</option>
                        <option>--add-opens=javafx.base/com.sun.javafx=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.prism=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.prism.d3d=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/javafx.scene.image=ALL-UNNAMED</option>
                        <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=openglfx</option>
                        <option>--add-opens=javafx.graphics/com.sun.prism=openglfx</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.sg.prism=openglfx</option>
                        <option>--add-opens=javafx.graphics/com.sun.prism.d3d=openglfx</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.scene=openglfx</option>
                        <option>--add-opens=javafx.graphics/com.sun.javafx.scene.layout=openglfx</option>
                    </options>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>gluonfx-maven-plugin</artifactId>
                <version>${gluonfx.plugin.version}</version>
                <configuration>
                    <verbose>false</verbose>
                    <target>${gluonfx.target}</target>
                    <mainClass>${app.launcher}</mainClass>
                    <enableSWRendering>false</enableSWRendering>
                    <graalvmHome>${env.JAVA_HOME}</graalvmHome>

                    <releaseConfiguration>
                        <vendor>BlueGrid</vendor>
                        <description>Lightning-I</description>
                        <bundleVersion>${project.version}</bundleVersion>
                        <bundleShortVersion>${project.version}</bundleShortVersion>
                    </releaseConfiguration>
                    <reflectionList>
                        <item>java.nio.file.FileSystems</item>
                        <item>sun.java2d.loops.SetFillRectANY</item>
                        <item>javafx.scene.Cursor</item>
                        <item>sun.java2d.loops.SetDrawLineANY</item>
                        <item>java.awt.image.BufferedImage</item>
                        <item>java.awt.Insets</item>
                        <item>java.awt.Rectangle</item>
                        <item>java.awt.Toolkit</item>
                        <item>java.awt.color.ICC_Profile</item>
                        <item>java.awt.image.DirectColorModel</item>
                        <item>sun.awt.image.ByteComponentRaster</item>
                        <item>com.sun.javafx.scene.NodeHelper</item>
                        <item>com.oracle.svm.core.jni.access.JNINativeLinkage</item>

                        <item>org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler</item>
                        <item>org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue</item>
                        <item>org.apache.pdfbox.pdmodel.PDDocument</item>
                        <item>org.apache.pdfbox.multipdf.PDFMergerUtility</item>
                        <item>org.apache.fontbox.cmap.CMapParser</item>
                        <item>org.apache.pdfbox.pdmodel.font.PDType0Font</item>
                        <item>org.apache.pdfbox.rendering.TTFGlyph2D</item>
                        <item>ch.qos.logback.classic.spi.LogbackServiceProvider</item>
                        <item>org.slf4j.spi.SLF4JServiceProvider</item>
                        <item>ch.qos.logback.classic.spi.LogbackServiceProvider</item>

                    </reflectionList>
                    <jniList>
                        <item>java.awt.image.BufferedImage</item>
                        <item>java.awt.Insets</item>
                        <item>java.awt.Rectangle</item>
                        <item>java.awt.Toolkit</item>
                        <item>java.awt.color.ICC_Profile</item>
                        <item>java.awt.image.DirectColorModel</item>
                        <item>sun.awt.image.ByteComponentRaster</item>
                        <item>com.sun.javafx.scene.NodeHelper</item>
                        <item>sun.java2d.loops.SetFillRectANY</item>
                        <item>com.oracle.svm.core.jni.access.JNINativeLinkage</item>
                    </jniList>

                    <nativeImageArgs>
                        <nativeImageArg>-H:IncludeResources=META-INF/services/*.*</nativeImageArg>
                        <nativeImageArg>-H:ConfigurationFileDirectories=src/main/resources/META-INF/native-image/</nativeImageArg>
                        <nativeImageArg>-H:ConfigurationResourceRoots=src/main/resources/</nativeImageArg>
                        <nativeImageArg>-H:-UseServiceLoaderFeature</nativeImageArg>
                        <nativeImageArg>-H:+AllowDeprecatedBuilderClassesOnImageClasspath</nativeImageArg>
                        <nativeImageArg>--pgo-instrument</nativeImageArg>
                        <nativeImageArg>--enable-http</nativeImageArg>
                        <nativeImageArg>--enable-https</nativeImageArg>
                        <nativeImageArg>-H:-UseCAPCache</nativeImageArg>
                        <nativeImageArg>-H:-CheckToolchain</nativeImageArg>
                    </nativeImageArgs>
                    <resourcesList>
                        <list>.*\\.xml$</list>
                        <list>.*\\.html$</list>
                        <list>.*\\.json$</list>
                        <list>.*\\.xsb$</list>
                        <list>.*\\.properties$</list>
                        <list>.*\\.pf$</list>
                        <list>.*\\.ttf$</list>
                        <list>.*\\.lib</list>
                        <list>.*\\.a</list>
                        <list>.*\\.vs</list>
                        <list>.*\\.gs</list>
                        <list>.*\\.fs</list>
                        <list>.*\\.txt$</list>
                        <list>.*\\.afm$</list>
                        <list>.*\\.icc$</list>
                        <list>.*\\.iprof$</list>
                        <list>^([^.]+)$</list>
                    </resourcesList>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${app.launcher}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <argLine>
                        --add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED

                    </argLine>

                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>
    <repositories>
        <repository>
            <id>maven_central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>local</id>
            <name>local</name>
            <url>file:///~\.m2\repository</url>
        </repository>
    </repositories>
    <profiles>
        <profile>
            <id>lwjgl-natives-linux-amd64</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-linux</lwjgl.natives>
                <javafx.platform>linux</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-linux-aarch64</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-linux-arm64</lwjgl.natives>
                <javafx.platform>linux</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-linux-arm</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>arm</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-linux-arm32</lwjgl.natives>
                <javafx.platform>linux</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-linux-arm32</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>arm32</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-linux-arm32</lwjgl.natives>
                <javafx.platform>linux</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-macos-amd64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-macos</lwjgl.natives>
                <javafx.platform>mac</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-macos-intel64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-macos</lwjgl.natives>
                <javafx.platform>mac</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-macos-aarch64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-macos-arm64</lwjgl.natives>
                <javafx.platform>mac</javafx.platform>
                <openjfx.es2>OpenGLFX-Ext</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-windows-amd64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-windows</lwjgl.natives>
                <javafx.platform>win</javafx.platform>
                <openjfx.es2>jfx-es2</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-windows-intelx86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-windows-x86</lwjgl.natives>
                <javafx.platform>win</javafx.platform>
                <openjfx.es2>jfx-es2</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-windows-x86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-windows-x86</lwjgl.natives>
                <javafx.platform>win</javafx.platform>
                <openjfx.es2>jfx-es2</openjfx.es2>
            </properties>
        </profile>
        <profile>
            <id>lwjgl-natives-windows-aarch64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <lwjgl.natives>natives-windows-arm64</lwjgl.natives>
                <javafx.platform>win</javafx.platform>
                <openjfx.es2>jfx-es2</openjfx.es2>
            </properties>
        </profile>
    </profiles>
</project>